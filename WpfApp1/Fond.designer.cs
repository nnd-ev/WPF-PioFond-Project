#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WpfApp1
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="FondPIO")]
	public partial class FondDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertFirma(Firma instance);
    partial void UpdateFirma(Firma instance);
    partial void DeleteFirma(Firma instance);
    partial void InsertOsiguranik(Osiguranik instance);
    partial void UpdateOsiguranik(Osiguranik instance);
    partial void DeleteOsiguranik(Osiguranik instance);
    partial void InsertUplate(Uplate instance);
    partial void UpdateUplate(Uplate instance);
    partial void DeleteUplate(Uplate instance);
    #endregion
		
		public FondDataContext() : 
				base(global::WpfApp1.Properties.Settings.Default.FondPIOConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public FondDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FondDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FondDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FondDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Firma> Firmas
		{
			get
			{
				return this.GetTable<Firma>();
			}
		}
		
		public System.Data.Linq.Table<Osiguranik> Osiguraniks
		{
			get
			{
				return this.GetTable<Osiguranik>();
			}
		}
		
		public System.Data.Linq.Table<Uplate> Uplates
		{
			get
			{
				return this.GetTable<Uplate>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Firma")]
	public partial class Firma : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PIB;
		
		private string _Naziv;
		
		private string _Adresa;
		
		private string _Grad;
		
		private string _Delatnost;
		
		private EntitySet<Uplate> _Uplates;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPIBChanging(int value);
    partial void OnPIBChanged();
    partial void OnNazivChanging(string value);
    partial void OnNazivChanged();
    partial void OnAdresaChanging(string value);
    partial void OnAdresaChanged();
    partial void OnGradChanging(string value);
    partial void OnGradChanged();
    partial void OnDelatnostChanging(string value);
    partial void OnDelatnostChanged();
    #endregion
		
		public Firma()
		{
			this._Uplates = new EntitySet<Uplate>(new Action<Uplate>(this.attach_Uplates), new Action<Uplate>(this.detach_Uplates));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PIB", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PIB
		{
			get
			{
				return this._PIB;
			}
			set
			{
				if ((this._PIB != value))
				{
					this.OnPIBChanging(value);
					this.SendPropertyChanging();
					this._PIB = value;
					this.SendPropertyChanged("PIB");
					this.OnPIBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Naziv", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Naziv
		{
			get
			{
				return this._Naziv;
			}
			set
			{
				if ((this._Naziv != value))
				{
					this.OnNazivChanging(value);
					this.SendPropertyChanging();
					this._Naziv = value;
					this.SendPropertyChanged("Naziv");
					this.OnNazivChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adresa", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Adresa
		{
			get
			{
				return this._Adresa;
			}
			set
			{
				if ((this._Adresa != value))
				{
					this.OnAdresaChanging(value);
					this.SendPropertyChanging();
					this._Adresa = value;
					this.SendPropertyChanged("Adresa");
					this.OnAdresaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grad", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Grad
		{
			get
			{
				return this._Grad;
			}
			set
			{
				if ((this._Grad != value))
				{
					this.OnGradChanging(value);
					this.SendPropertyChanging();
					this._Grad = value;
					this.SendPropertyChanged("Grad");
					this.OnGradChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Delatnost", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Delatnost
		{
			get
			{
				return this._Delatnost;
			}
			set
			{
				if ((this._Delatnost != value))
				{
					this.OnDelatnostChanging(value);
					this.SendPropertyChanging();
					this._Delatnost = value;
					this.SendPropertyChanged("Delatnost");
					this.OnDelatnostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Firma_Uplate", Storage="_Uplates", ThisKey="PIB", OtherKey="PIB")]
		public EntitySet<Uplate> Uplates
		{
			get
			{
				return this._Uplates;
			}
			set
			{
				this._Uplates.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Uplates(Uplate entity)
		{
			this.SendPropertyChanging();
			entity.Firma = this;
		}
		
		private void detach_Uplates(Uplate entity)
		{
			this.SendPropertyChanging();
			entity.Firma = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Osiguranik")]
	public partial class Osiguranik : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SifOsiguranika;
		
		private string _Ime;
		
		private string _Prezime;
		
		private int _Godiste;
		
		private EntitySet<Uplate> _Uplates;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSifOsiguranikaChanging(int value);
    partial void OnSifOsiguranikaChanged();
    partial void OnImeChanging(string value);
    partial void OnImeChanged();
    partial void OnPrezimeChanging(string value);
    partial void OnPrezimeChanged();
    partial void OnGodisteChanging(int value);
    partial void OnGodisteChanged();
    #endregion
		
		public Osiguranik()
		{
			this._Uplates = new EntitySet<Uplate>(new Action<Uplate>(this.attach_Uplates), new Action<Uplate>(this.detach_Uplates));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SifOsiguranika", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SifOsiguranika
		{
			get
			{
				return this._SifOsiguranika;
			}
			set
			{
				if ((this._SifOsiguranika != value))
				{
					this.OnSifOsiguranikaChanging(value);
					this.SendPropertyChanging();
					this._SifOsiguranika = value;
					this.SendPropertyChanged("SifOsiguranika");
					this.OnSifOsiguranikaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ime", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Ime
		{
			get
			{
				return this._Ime;
			}
			set
			{
				if ((this._Ime != value))
				{
					this.OnImeChanging(value);
					this.SendPropertyChanging();
					this._Ime = value;
					this.SendPropertyChanged("Ime");
					this.OnImeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prezime", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Prezime
		{
			get
			{
				return this._Prezime;
			}
			set
			{
				if ((this._Prezime != value))
				{
					this.OnPrezimeChanging(value);
					this.SendPropertyChanging();
					this._Prezime = value;
					this.SendPropertyChanged("Prezime");
					this.OnPrezimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Godiste", DbType="Int NOT NULL")]
		public int Godiste
		{
			get
			{
				return this._Godiste;
			}
			set
			{
				if ((this._Godiste != value))
				{
					this.OnGodisteChanging(value);
					this.SendPropertyChanging();
					this._Godiste = value;
					this.SendPropertyChanged("Godiste");
					this.OnGodisteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Osiguranik_Uplate", Storage="_Uplates", ThisKey="SifOsiguranika", OtherKey="SifOsiguranika")]
		public EntitySet<Uplate> Uplates
		{
			get
			{
				return this._Uplates;
			}
			set
			{
				this._Uplates.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Uplates(Uplate entity)
		{
			this.SendPropertyChanging();
			entity.Osiguranik = this;
		}
		
		private void detach_Uplates(Uplate entity)
		{
			this.SendPropertyChanging();
			entity.Osiguranik = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Uplate")]
	public partial class Uplate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SifOsiguranika;
		
		private int _PIB;
		
		private int _Godina;
		
		private int _Mesec;
		
		private int _Uplaceno;
		
		private EntityRef<Firma> _Firma;
		
		private EntityRef<Osiguranik> _Osiguranik;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSifOsiguranikaChanging(int value);
    partial void OnSifOsiguranikaChanged();
    partial void OnPIBChanging(int value);
    partial void OnPIBChanged();
    partial void OnGodinaChanging(int value);
    partial void OnGodinaChanged();
    partial void OnMesecChanging(int value);
    partial void OnMesecChanged();
    partial void OnUplacenoChanging(int value);
    partial void OnUplacenoChanged();
    #endregion
		
		public Uplate()
		{
			this._Firma = default(EntityRef<Firma>);
			this._Osiguranik = default(EntityRef<Osiguranik>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SifOsiguranika", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SifOsiguranika
		{
			get
			{
				return this._SifOsiguranika;
			}
			set
			{
				if ((this._SifOsiguranika != value))
				{
					if (this._Osiguranik.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSifOsiguranikaChanging(value);
					this.SendPropertyChanging();
					this._SifOsiguranika = value;
					this.SendPropertyChanged("SifOsiguranika");
					this.OnSifOsiguranikaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PIB", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PIB
		{
			get
			{
				return this._PIB;
			}
			set
			{
				if ((this._PIB != value))
				{
					if (this._Firma.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPIBChanging(value);
					this.SendPropertyChanging();
					this._PIB = value;
					this.SendPropertyChanged("PIB");
					this.OnPIBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Godina", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Godina
		{
			get
			{
				return this._Godina;
			}
			set
			{
				if ((this._Godina != value))
				{
					this.OnGodinaChanging(value);
					this.SendPropertyChanging();
					this._Godina = value;
					this.SendPropertyChanged("Godina");
					this.OnGodinaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mesec", DbType="Int NOT NULL")]
		public int Mesec
		{
			get
			{
				return this._Mesec;
			}
			set
			{
				if ((this._Mesec != value))
				{
					this.OnMesecChanging(value);
					this.SendPropertyChanging();
					this._Mesec = value;
					this.SendPropertyChanged("Mesec");
					this.OnMesecChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Uplaceno", DbType="Int NOT NULL")]
		public int Uplaceno
		{
			get
			{
				return this._Uplaceno;
			}
			set
			{
				if ((this._Uplaceno != value))
				{
					this.OnUplacenoChanging(value);
					this.SendPropertyChanging();
					this._Uplaceno = value;
					this.SendPropertyChanged("Uplaceno");
					this.OnUplacenoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Firma_Uplate", Storage="_Firma", ThisKey="PIB", OtherKey="PIB", IsForeignKey=true)]
		public Firma Firma
		{
			get
			{
				return this._Firma.Entity;
			}
			set
			{
				Firma previousValue = this._Firma.Entity;
				if (((previousValue != value) 
							|| (this._Firma.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Firma.Entity = null;
						previousValue.Uplates.Remove(this);
					}
					this._Firma.Entity = value;
					if ((value != null))
					{
						value.Uplates.Add(this);
						this._PIB = value.PIB;
					}
					else
					{
						this._PIB = default(int);
					}
					this.SendPropertyChanged("Firma");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Osiguranik_Uplate", Storage="_Osiguranik", ThisKey="SifOsiguranika", OtherKey="SifOsiguranika", IsForeignKey=true)]
		public Osiguranik Osiguranik
		{
			get
			{
				return this._Osiguranik.Entity;
			}
			set
			{
				Osiguranik previousValue = this._Osiguranik.Entity;
				if (((previousValue != value) 
							|| (this._Osiguranik.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Osiguranik.Entity = null;
						previousValue.Uplates.Remove(this);
					}
					this._Osiguranik.Entity = value;
					if ((value != null))
					{
						value.Uplates.Add(this);
						this._SifOsiguranika = value.SifOsiguranika;
					}
					else
					{
						this._SifOsiguranika = default(int);
					}
					this.SendPropertyChanged("Osiguranik");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
